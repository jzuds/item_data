x-common-depends: &common-depends
  osrs-database:
    condition: service_healthy

x-healthcheck-postgres: &healthcheck-postgres
  test: ["CMD-SHELL", "pg_isready -U item_data_user -d item_data_db"]
  interval: 10s
  timeout: 5s
  retries: 5

services:
  osrs-database:
    image: postgres:latest
    environment:
      POSTGRES_USER: item_data_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: item_data_db
    ports:
      - "5432:5432"
    healthcheck: *healthcheck-postgres
    volumes:
      - osrs-database-data:/var/lib/postgresql/data
      - ./item_db/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - item_data_network

  dashboard:
    build: ./dashboard
    env_file:
      - ./dashboard/.env
    ports:
      - "8050:8050"
    volumes:
      - ./dashboard:/dashboard
    depends_on: *common-depends
    restart: unless-stopped
    networks:
      - item_data_network
  
  airflow-webserver:
    image: apache/airflow:2.8.1
    depends_on:
      - airflow-postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
      - ./airflow/scripts:/opt/airflow/scripts
    group_add:
    - 1001
    entrypoint: ["/opt/airflow/scripts/entrypoint.sh"]
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - item_data_network

  airflow-scheduler:
    image: apache/airflow:2.8.1
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
    - 1001
    command: scheduler
    restart: unless-stopped
    networks:
      - item_data_network

  airflow-postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-database-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - item_data_network

volumes:
  osrs-database-data:
  airflow-database-data:

networks:
  item_data_network:
    name: item_data_network
    driver: bridge
