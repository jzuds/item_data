x-common-environment: &common-environment
  DB_HOST: ${DB_HOST}
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}

x-common-depends: &common-depends
  postgres:
    condition: service_healthy

x-healthcheck-postgres: &healthcheck-postgres
  test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  interval: 10s
  timeout: 5s
  retries: 5

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck: *healthcheck-postgres
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - item_data_network

  dash_app:
    build: ./dash_app
    env_file:
      - .env
    ports:
      - "8050:8050"
    volumes:
      - ./dash_app:/dash_app
    depends_on: *common-depends
    environment: *common-environment
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_blood_runes:
    build: ./data_collector
    env_file:
      - .env
    command: ["--item", "565"]
    depends_on: *common-depends
    environment: *common-environment
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_bird_nests:
    build: ./data_collector
    env_file:
      - .env
    command: ["--item", "5075"]
    depends_on: *common-depends
    environment: *common-environment
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_oak_planks:
    build: ./data_collector
    env_file:
      - .env
    command: ["--item", "8778"]
    depends_on: *common-depends
    environment: *common-environment
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_dragon_bones:
    build: ./data_collector
    env_file:
      - .env
    command: ["--item", "536"]
    depends_on: *common-depends
    environment: *common-environment
    restart: unless-stopped
    networks:
      - item_data_network

networks:
  item_data_network:
    driver: bridge
