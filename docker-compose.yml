services:
  postgres:
    image: postgres:latest
    container_name: item_data_postgres
    environment:
      POSTGRES_USER: item_data_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: item_data_db
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - item_data_network

  dash_app:
    build: ./dash_app
    container_name: item_dashboard
    ports:
      - "8050:8050"
    volumes:
      - ./dash_app:/dash_app
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_NAME: item_data_db
      DB_USER: item_data_user
      DB_PASSWORD: secure_password_123
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_blood_runes:
    build: ./data_collector
    container_name: data_collection_blood_runes
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_NAME: item_data_db
      DB_USER: item_data_user
      DB_PASSWORD: secure_password_123
    command: ["--item", "565"]
    volumes:
      - ./queue:/app/queue
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_bird_nests:
    build: ./data_collector
    container_name: data_collection_bird_nests
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_NAME: item_data_db
      DB_USER: item_data_user
      DB_PASSWORD: secure_password_123
    command: ["--item", "5075"]
    volumes:
      - ./queue:/app/queue
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_oak_planks:
    build: ./data_collector
    container_name: data_collection_oak_planks
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_NAME: item_data_db
      DB_USER: item_data_user
      DB_PASSWORD: secure_password_123
    command: ["--item", "8778"]
    volumes:
      - ./queue:/app/queue
    restart: unless-stopped
    networks:
      - item_data_network

  data_collection_dragon_bones:
    build: ./data_collector
    container_name: data_collection_dragon_bones
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_NAME: item_data_db
      DB_USER: item_data_user
      DB_PASSWORD: secure_password_123
    command: ["--item", "536"]
    volumes:
      - ./queue:/app/queue
    restart: unless-stopped
    networks:
      - item_data_network

networks:
  item_data_network:
    driver: bridge